{"title":"ARM Contex-A8裸机DS18B20驱动","uid":"541b240588262648fd83a34d7c89d5e4","slug":"ARM-Contex-A8-ds18b20","date":"2021-07-03T06:52:19.000Z","updated":"2023-08-27T15:45:05.641Z","comments":true,"path":"api/articles/ARM-Contex-A8-ds18b20.json","keywords":null,"cover":"https://images.unsplash.com/photo-1505424297051-c3ad50b055ae?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxfDB8MXxyYW5kb218MHx8cGNifHx8fHx8MTY5MzE1MDgyOA&ixlib=rb-4.0.3&q=80&utm_campaign=api-credit&utm_medium=referral&utm_source=unsplash_source&w=1080","content":"<p>近期做一个裸机采集温度的设计，要求裸机实现，网上DS18B20的驱动资料很多，但是基本都是51和STM32以及通过跑操作系统驱动实现的，这方面的资料少之又少。经过两天时间的学习，实现了基于三星的S5PV210 CPU裸机读取DS18B20温度。DS18B20的时序就不说了，网上资料很多，其实重点在于IO配置以及精准延时。前期通过定时器实现延时，但是发现误差很大，实现不了，后来通过查看朱有鹏老师的课程，搬用了汇编的延时程序，达到了微妙级的延时，最准实现了裸机读取温度值。</p>\n<h3 id=\"原理图\"><a href=\"#原理图\" class=\"headerlink\" title=\"原理图\"></a>原理图</h3><p>博客迁移，图片丢失～</p>\n<h3 id=\"启动代码（初始化时钟、串口等）\"><a href=\"#启动代码（初始化时钟、串口等）\" class=\"headerlink\" title=\"启动代码（初始化时钟、串口等）\"></a>启动代码（初始化时钟、串口等）</h3><pre class=\"line-numbers language-asm\" data-language=\"asm\"><code class=\"language-asm\">.text\n.global _start\n.global IRQ_handle\n_start:\n\t\tldr sp,&#x3D;0xD0037D80\t&#x2F;&#x2F;初始化栈\n \n\t\tbl  EnableIRQ\t\t&#x2F;&#x2F;打开全局IRQ中断开关\n \n\t\tbl  EnableVIC\t\t&#x2F;&#x2F;使能中断控制器\n \n\t\tbl \tclock_init\t\t&#x2F;&#x2F;初始化系统时钟\n \n\t\tbl \tuart_init\t\t&#x2F;&#x2F;初始化串口\n \n\t\tbl  main\t\t\t&#x2F;&#x2F;跳转到main函数执行，它是用C函数实现的\nhalt:\n\t\tb halt\n \n \nEnableIRQ:\n        mrs r0,cpsr  \t\t \t\t&#x2F;&#x2F;获得cpsr寄存器的值，放入r0当中\n \n        bic r0,r0,#(1&lt;&lt;7)  \t\t\t&#x2F;&#x2F;将r0的第7位清零\n \n        msr cpsr_cxsf,r0   \t\t\t&#x2F;&#x2F;将清零后的值重新放回cpsr当中\n \n        mov pc,lr        \t\t\t&#x2F;&#x2F;lr位r14，即调用函数语句的下一条语\nEnableVIC:\n\t    mrc  p15,0,r0,c1,c0,0\n \n\t    orr  r0,r0,#(1&lt;&lt;24)\n \n\t    mcr  p15,0,r0,c1,c0,0\n \n\t    mov  pc,lr</code></pre>\n<h3 id=\"DS18B20-h（定义相关寄存器）\"><a href=\"#DS18B20-h（定义相关寄存器）\" class=\"headerlink\" title=\"DS18B20.h（定义相关寄存器）\"></a>DS18B20.h（定义相关寄存器）</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#define DS18B20CON (*(volatile unsigned int *)0xE02002A0)\n#define DS18B20DAT (*(volatile unsigned int *)0xE02002A4)\n#define DS18B20PUD (*(volatile unsigned int *)0xE02002A8)\n \n \n#define DS18B20_DQ_OUT_L DS18B20DAT&#x3D;0x00\n#define DS18B20_DQ_OUT_H DS18B20DAT&#x3D;0xff\n#define DS18B20_DQ_IN (DS18B20DAT&amp;0b10000000)\nvoid Delay_ms(unsigned int num);\nvoid Delay_us(long us);\nvoid set_out();\nvoid set_in();\nunsigned char read(void);\nvoid write(unsigned char d);\nunsigned char reset();\nunsigned char readData();\nvoid writeData(unsigned char d);\nunsigned short readTemp();</code></pre>\n<h3 id=\"DS18B20-C（驱动实现）\"><a href=\"#DS18B20-C（驱动实现）\" class=\"headerlink\" title=\"DS18B20.C（驱动实现）\"></a>DS18B20.C（驱动实现）</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"> \n#include &quot;ds18b20.h&quot;\nvoid Delay_ms(unsigned int num)&#123;\n\tunsigned int temp1&#x3D;58823;\n\tunsigned int temp2&#x3D;0;\n\tasm volatile(\n\t\t\t&quot;Delay_ms_0:\\n&quot;\n\t\t\t&quot;mov %0,%2\\n&quot;\n\t\t\t&quot;Delay_ms_1:\\n&quot;\n\t\t\t&quot;subs %0,%0,#1\\n&quot;\n\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t&quot;mov %0,%0\\n&quot;\n\t\t\t&quot;bne Delay_ms_1\\n&quot;\n\t\t\t&quot;subs %1,%1,#1\\n&quot;\n\t\t\t&quot;bne Delay_ms_0\\n&quot;\n\t\t\t:&quot;+r&quot;(temp2),&quot;+r&quot;(num):&quot;r&quot;(temp1):&quot;cc&quot;\n\t);\n \n&#125;\nvoid set_out()&#123;\n\tDS18B20CON&amp;&#x3D;~(0xf&lt;&lt;(4*2));\n\tDS18B20CON|&#x3D;0x1&lt;&lt;(4*2);\n&#125;\nvoid set_in()&#123;\n\tDS18B20CON&#x3D;~(0xf&lt;&lt;(4*2));\n&#125;\nunsigned char read(void)&#123;\n\tunsigned char value;\n\tvalue&#x3D;DS18B20DAT;\n\tvalue&gt;&gt;&#x3D;(1*2);\n\tvalue&amp;&#x3D;0x1;\n\treturn value;\n&#125;\nvoid write(unsigned char d)&#123;\n\tif(d&#x3D;&#x3D;1) DS18B20DAT|&#x3D;0x1&lt;&lt;(1*2);\n\telse DS18B20DAT&amp;&#x3D;~(0x1&lt;&lt;(1*2));\n&#125;\nunsigned char reset()&#123;\n\tunsigned short i&#x3D;0;\n\tset_out();\n\twrite(0);\n\tDelay_us(680);\n\tset_in();\n\twhile(read())&#123;\n\t\ti++;\n\t\tDelay_us(1);\n\t\tif(i&gt;100) return 1;\n\t&#125;\n\tDelay_us(270);\n\treturn 0;\n&#125;\nunsigned char readData()&#123;\n\tunsigned char i,d&#x3D;0;\n\tfor(i&#x3D;0;i&lt;8;i++)&#123;\n\t\tset_out();\n\t\twrite(0);\n\t\td&gt;&gt;&#x3D;1;\n\t\tDelay_us(1);\n\t\tset_in();\n\t\tif(read()) d|&#x3D;0x80;\n\t\tDelay_us(40);\n\t&#125;\n\treturn d;\n&#125;\nvoid writeData(unsigned char d)&#123;\n\tunsigned char i;\n\tfor(i&#x3D;0;i&lt;8;i++)&#123;\n\t\tset_out();\n\t\twrite(0);\n\t\tDelay_us(3);\n\t\twrite(d&amp;0x01);\n\t\tDelay_us(60);\n\t\tset_in();\n\t\td&gt;&gt;&#x3D;1;\n\t&#125;\n&#125;\nunsigned short readTemp()&#123;\n\tunsigned char th,tl;\n\tunsigned short d;\n\tif(reset())&#123;\n\t\treturn 88;&#x2F;&#x2F;错误\n\t&#125;\n\twriteData(0xcc);\n\twriteData(0x44);\n\tif(reset())&#123;\n\t\treturn 88;&#x2F;&#x2F;错误\n\t&#125;\n\twriteData(0xcc);\n\twriteData(0xbe);\n\ttl&#x3D;readData();\n\tth&#x3D;readData();\n\treturn tl&#x2F;16+th*16;\n\t&#x2F;&#x2F;printf(&quot;temph:%d;templ:%d;\\n&quot;,readData(),readData());\n&#125;\nvoid Delay_us(long us)&#123;\n\tunsigned int temp1&#x3D;59;\n\t\tunsigned int temp2&#x3D;0;\n\t\tasm volatile(\n\t\t\t\t&quot;Delay_us_0:\\n&quot;\n\t\t\t\t&quot;mov %0,%2\\n&quot;\n\t\t\t\t&quot;Delay_us_1:\\n&quot;\n\t\t\t\t&quot;subs %0,%0,#1\\n&quot;\n\t\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t\t&quot;mov %1,%1\\n&quot;\n\t\t\t\t&quot;mov %0,%0\\n&quot;\n\t\t\t\t&quot;bne Delay_us_1\\n&quot;\n\t\t\t\t&quot;subs %1,%1,#1\\n&quot;\n\t\t\t\t&quot;bne Delay_us_0\\n&quot;\n\t\t\t\t:&quot;+r&quot;(temp2),&quot;+r&quot;(us):&quot;r&quot;(temp1):&quot;cc&quot;\n\t\t);\n&#125;</code></pre>\n<h3 id=\"main-c\"><a href=\"#main-c\" class=\"headerlink\" title=\"main.c\"></a>main.c</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">&#x2F;*按键相关的寄存器地址*&#x2F;\n#define GPJ0CON\t\t (*(volatile unsigned int *)0xE0200240)\n#define GPJ0DAT\t \t (*(volatile unsigned int *)0xE0200244)\n#define GPJ0PUD\t\t (*(volatile unsigned int *)0xE0200248)\n#define GPJ1CON      (*(volatile unsigned int *)0xE0200260)\n#define GPJ1DAT      (*(volatile unsigned int *)0xE0200264)\n#define GPJ1PUD      (*(volatile unsigned int *)0xE0200268)\n#define GPJ4CON      (*(volatile unsigned int *)0xE02002C0)\n#define GPJ4DAT      (*(volatile unsigned int *)0xE02002C4)\n&#x2F;*LED1相关的寄存器地址*&#x2F;\n#define GPJ2CON      (*(volatile unsigned int *)0xE0200280)\n#define GPJ2DAT      (*(volatile unsigned int *)0xE0200284)\n \n&#x2F;&#x2F;蜂鸣器\n#define GPD0CON      (*(volatile unsigned int *)0xE02000A0)\n#define GPD0DAT      (*(volatile unsigned int *)0xE02000A4)\n \n \n#include &quot;timer.h&quot;\n#include &quot;ds18b20.h&quot;\nvoid key_init()\n&#123;\n\t&#x2F;*\n\t&#x2F;&#x2F;设置CPJ1_2设置为输入模式\n\tGPJ1CON &#x3D; GPJ1CON &amp; 0xfffff0ff;  &#x2F;&#x2F;清除[12-15],设置为0，即设置为输入模式\n\tGPJ1PUD &#x3D; GPJ1PUD &amp; 0xffcf;\t\t &#x2F;&#x2F;清除[6-7]\n\tGPJ1PUD &#x3D; GPJ1PUD | 0x10;\t\t&#x2F;&#x2F;设置[6-7]为01，即下拉使能\n \n\t&#x2F;&#x2F;设置CPJ4_3设置为输出模式\n\tGPJ4CON &#x3D; GPJ4CON &amp; 0xffff0fff;  &#x2F;&#x2F;清除[16-19],设置为0\n\tGPJ4CON &#x3D; GPJ4CON | 0x1000;\t &#x2F;&#x2F;设置[16-19]四位为0001，即设置为输出模式\n\tGPJ4DAT &#x3D; GPJ4DAT | 0x8\t;\t &#x2F;&#x2F;设置GPJ4_4输出高电平\n\t*&#x2F;\n\t&#x2F;&#x2F;设置CPJ1_0设置为输入模式\n\t&#x2F;&#x2F;GPJ1CON &#x3D; GPJ1CON &amp; 0xffff0000;  &#x2F;&#x2F;清除[12-15],设置为0，即设置为输入模式\n\tGPJ1CON&#x3D;0x00;\n\t&#x2F;&#x2F;GPJ1PUD &#x3D; GPJ1PUD &amp; 0x5555;\t\t &#x2F;&#x2F;清除[6-7]\n\t&#x2F;&#x2F;GPJ1PUD &#x3D; GPJ1PUD | 0x1;\t\t&#x2F;&#x2F;设置[6-7]为01，即下拉使能\n\tGPJ1PUD &#x3D; 0x5555;\n\t&#x2F;&#x2F;设置CPJ4_4设置为输出模式\n\tGPJ4CON &#x3D; GPJ4CON &amp; 0xfff0000f;  &#x2F;&#x2F;清除[16-19],设置为0\n\tGPJ4CON &#x3D; GPJ4CON | 0x11110;\t &#x2F;&#x2F;设置[16-19]四位为0001，即设置为输出模式\n\t&#x2F;&#x2F;GPJ4DAT &#x3D; GPJ4DAT | 0x10;\t &#x2F;&#x2F;设置GPJ4_4输出高电平\n\tGPJ4DAT&#x3D;0x1e;\n&#125;\nvoid led_init()\n&#123;\n\t&#x2F;&#x2F;GPJ2CON &#x3D; GPJ2CON &amp; 0xffffff00;  &#x2F;&#x2F;清除led灯1对应的控制引脚，即将低四位设置为0000\n\t&#x2F;&#x2F;GPJ2CON &#x3D; GPJ2CON | 0x11111111;\t\t&#x2F;&#x2F;设置低四位为0001，即设置为输出模式\n\tGPJ2CON&#x3D;0x11111111;\n\tGPD0CON&#x3D;0x11111111;\n&#125;\n \nunsigned char key_scan()&#123;\n\tunsigned char i,temp;\n\tGPJ4DAT&#x3D;0x1e;\n\tif(GPJ1DAT)&#123;\n\t\tswitch (GPJ1DAT)\n\t\t&#123;\n\t\t\tcase 0b00000001:&#123;\n\t\t\t\ttemp&#x3D;0b00111100;\n\t\t\t\tfor(i&#x3D;0;i&lt;4;i++)&#123;\n\t\t\t\t\tGPJ4DAT&#x3D;temp;\n\t\t\t\t\tif(!GPJ1DAT)&#123;\n\t\t\t\t\t\treturn i+1;\n\t\t\t\t\t&#125;\n\t\t\t\t\ttemp&#x3D;temp&lt;&lt;1;\n\t\t\t\t&#125;\n\t\t\t&#125;break;\n\t\t\tcase 0b00000010:&#123;\n\t\t\t\ttemp&#x3D;0b00111100;\n\t\t\t\tfor(i&#x3D;0;i&lt;4;i++)&#123;\n\t\t\t\t\tGPJ4DAT&#x3D;temp;\n\t\t\t\t\tif(!GPJ1DAT)&#123;\n\t\t\t\t\t\treturn (i+1)+4*1;\n\t\t\t\t\t&#125;\n\t\t\t\t\ttemp&#x3D;temp&lt;&lt;1;\n\t\t\t\t&#125;\n\t\t\t&#125;break;\n\t\t\tcase 0b00000100:&#123;\n\t\t\t\ttemp&#x3D;0b00111100;\n\t\t\t\tfor(i&#x3D;0;i&lt;4;i++)&#123;\n\t\t\t\t\tGPJ4DAT&#x3D;temp;\n\t\t\t\t\tif(!GPJ1DAT)&#123;\n\t\t\t\t\t\treturn (i+1)+4*2;\n\t\t\t\t\t&#125;\n\t\t\t\t\ttemp&#x3D;temp&lt;&lt;1;\n\t\t\t\t&#125;\n\t\t\t&#125;break;\n\t\t\tcase 0b00001000:&#123;\n\t\t\t\ttemp&#x3D;0b00111100;\n\t\t\t\tfor(i&#x3D;0;i&lt;4;i++)&#123;\n\t\t\t\t\tGPJ4DAT&#x3D;temp;\n\t\t\t\t\tif(!GPJ1DAT)&#123;\n\t\t\t\t\t\treturn (i+1)+4*3;\n\t\t\t\t\t&#125;\n\t\t\t\t\ttemp&#x3D;temp&lt;&lt;1;\n\t\t\t\t&#125;\n\t\t\t&#125;break;\n\t\t\tdefault:return 0;\n\t\t&#125;\n\t&#125;\n\treturn 0;\n&#125;\n \nvoid main()\n&#123;\n\tunsigned short temp;\n\tkey_init();\n\tled_init();\n\twhile(1)&#123;\n \n\t\t&#x2F;&#x2F;GPJ2DAT&#x3D;(DS18B20DAT&amp;0b10000000)?0xff:0x00;\n \n\t\t&#x2F;&#x2F;Delay_NS(1000000);\n\t\t&#x2F;&#x2F;for(i&#x3D;1150000;i&gt;0;i--);\n\t\t&#x2F;&#x2F;delayUS(1000000);\n\t\ttemp&#x3D;readTemp();\n\t\tif(temp&gt;30)&#123;\n\t\t\tGPD0DAT&#x3D;0XFF;\n\t\t\tGPJ2DAT&#x3D;0x00;\n\t\t&#125;\n\t\telse&#123;\n\t\t\tGPD0DAT&#x3D;0X00;\n\t\t\tGPJ2DAT&#x3D;0xff;\n\t\t&#125;\n\t\tDelay_ms(500);\n\t\t&#x2F;&#x2F;GPJ2DAT&#x3D;!GPJ2DAT;\n\t\tprintf(&quot;%d...\\n&quot;,temp);\n\t\t;\n \n\t&#125;\n \n&#125;</code></pre>\n<h3 id=\"最终效果\"><a href=\"#最终效果\" class=\"headerlink\" title=\"最终效果\"></a>最终效果</h3><p>由于本设计的重点在于数据的读取，所以仅处理了整数部分，小数部分直接丢弃了。。。。<br>博客迁移，图片丢失～</p>\n","text":"近期做一个裸机采集温度的设计，要求裸机实现，网上DS18B20的驱动资料很多，但是基本都是51和STM32以及通过跑操作系统驱动实现的，这方面的资料少之又少。经...","link":"","photos":[],"count_time":{"symbolsCount":"8.8k","symbolsTime":"8 mins."},"categories":[{"name":"开发","slug":"开发","count":4,"path":"api/categories/开发.json"},{"name":"硬件","slug":"开发/硬件","count":2,"path":"api/categories/开发/硬件.json"},{"name":"硬件","slug":"硬件","count":2,"path":"api/categories/硬件.json"},{"name":"裸机","slug":"硬件/裸机","count":1,"path":"api/categories/硬件/裸机.json"}],"tags":[{"name":"开发","slug":"开发","count":2,"path":"api/tags/开发.json"},{"name":"嵌入式","slug":"嵌入式","count":1,"path":"api/tags/嵌入式.json"},{"name":"三星s5pv210","slug":"三星s5pv210","count":1,"path":"api/tags/三星s5pv210.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%90%86%E5%9B%BE\"><span class=\"toc-text\">原理图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%AF%E5%8A%A8%E4%BB%A3%E7%A0%81%EF%BC%88%E5%88%9D%E5%A7%8B%E5%8C%96%E6%97%B6%E9%92%9F%E3%80%81%E4%B8%B2%E5%8F%A3%E7%AD%89%EF%BC%89\"><span class=\"toc-text\">启动代码（初始化时钟、串口等）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DS18B20-h%EF%BC%88%E5%AE%9A%E4%B9%89%E7%9B%B8%E5%85%B3%E5%AF%84%E5%AD%98%E5%99%A8%EF%BC%89\"><span class=\"toc-text\">DS18B20.h（定义相关寄存器）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DS18B20-C%EF%BC%88%E9%A9%B1%E5%8A%A8%E5%AE%9E%E7%8E%B0%EF%BC%89\"><span class=\"toc-text\">DS18B20.C（驱动实现）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#main-c\"><span class=\"toc-text\">main.c</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%80%E7%BB%88%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">最终效果</span></a></li></ol>","author":{"name":"Pa2sw0rd","slug":"blog-author","avatar":"http://static.pa2sw0rd.cn/static/images/pa2sw0rd.webp","link":"/","description":"一位正在重塑知识的技术人 <br /> @ <b>公众号：Pa2sw0rd</b>","socials":{"github":"https://github.com/Pa2sw0rd","twitter":"https://twitter.com/pa2sword","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"douyin":{"icon":"/svg/douyin.svg","link":"https://www.douyin.com/user/MS4wLjABAAAA-Ohh-uecs-fV_2dHQpkNPD8KUHel_Mzuok9jyxBAJmM"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"UE4使用陀螺仪实现第一人称AR射击游戏","uid":"c498b6832af326070e6d7a91fc3088af","slug":"ue4-gyro","date":"2022-05-23T15:36:33.000Z","updated":"2023-08-27T16:19:08.470Z","comments":true,"path":"api/articles/ue4-gyro.json","keywords":null,"cover":"http://static.pa2sw0rd.cn/static/images/image-13.gif","text":"前言在我们的印象里，如果想体验AR游戏，那么就得有一定的硬件支持，其实简单来说，一个AR游戏就是利用电脑模拟产生一个三维空间的虚拟世界，通过相应的硬件传感器将人...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"开发","slug":"开发","count":4,"path":"api/categories/开发.json"},{"name":"ue4","slug":"开发/ue4","count":1,"path":"api/categories/开发/ue4.json"},{"name":"ue4","slug":"ue4","count":1,"path":"api/categories/ue4.json"},{"name":"c++","slug":"ue4/c","count":1,"path":"api/categories/ue4/c.json"}],"tags":[{"name":"虚幻4引擎","slug":"虚幻4引擎","count":1,"path":"api/tags/虚幻4引擎.json"},{"name":"陀螺仪","slug":"陀螺仪","count":1,"path":"api/tags/陀螺仪.json"},{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"},{"name":"C++","slug":"C","count":1,"path":"api/tags/C.json"}],"author":{"name":"Pa2sw0rd","slug":"blog-author","avatar":"http://static.pa2sw0rd.cn/static/images/pa2sw0rd.webp","link":"/","description":"一位正在重塑知识的技术人 <br /> @ <b>公众号：Pa2sw0rd</b>","socials":{"github":"https://github.com/Pa2sw0rd","twitter":"https://twitter.com/pa2sword","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"douyin":{"icon":"/svg/douyin.svg","link":"https://www.douyin.com/user/MS4wLjABAAAA-Ohh-uecs-fV_2dHQpkNPD8KUHel_Mzuok9jyxBAJmM"}}}}},"next_post":{"title":"Android无需脱壳/逆向抓取加密包","uid":"67d8ae1d1f1daed3c8c63c2c5fb3c2f3","slug":"android-not-unpack-packet","date":"2021-06-24T06:25:12.000Z","updated":"2023-08-27T15:45:10.348Z","comments":true,"path":"api/articles/android-not-unpack-packet.json","keywords":null,"cover":"https://images.unsplash.com/photo-1518670309426-6643a938d2a9?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxfDB8MXxyYW5kb218MHx8YW5kcm9pZHx8fHx8fDE2OTMxNTA1MzA&ixlib=rb-4.0.3&q=80&utm_campaign=api-credit&utm_medium=referral&utm_source=unsplash_source&w=1080","text":"环境准备1、夜神安卓模拟器（Android版本5.1.1） 2、Xposed框架（应用商店即可下载） 3、Xserver（https://github.com/...","link":"","photos":[],"count_time":{"symbolsCount":328,"symbolsTime":"1 mins."},"categories":[{"name":"安全","slug":"安全","count":7,"path":"api/categories/安全.json"},{"name":"环境搭建","slug":"安全/环境搭建","count":1,"path":"api/categories/安全/环境搭建.json"},{"name":"环境搭建","slug":"环境搭建","count":2,"path":"api/categories/环境搭建.json"},{"name":"抓包","slug":"环境搭建/抓包","count":1,"path":"api/categories/环境搭建/抓包.json"}],"tags":[{"name":"Android","slug":"Android","count":1,"path":"api/tags/Android.json"},{"name":"抓包","slug":"抓包","count":1,"path":"api/tags/抓包.json"}],"author":{"name":"Pa2sw0rd","slug":"blog-author","avatar":"http://static.pa2sw0rd.cn/static/images/pa2sw0rd.webp","link":"/","description":"一位正在重塑知识的技术人 <br /> @ <b>公众号：Pa2sw0rd</b>","socials":{"github":"https://github.com/Pa2sw0rd","twitter":"https://twitter.com/pa2sword","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"},"douyin":{"icon":"/svg/douyin.svg","link":"https://www.douyin.com/user/MS4wLjABAAAA-Ohh-uecs-fV_2dHQpkNPD8KUHel_Mzuok9jyxBAJmM"}}}}}}